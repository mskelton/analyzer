generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(dbgenerated()) @map("_id") @db.ObjectId
  arn      String @unique
  accounts Account[]

  email    String @unique
  password String
  name     String
}

enum AccountType {
  DEMO
  LIVE
}

model Account {
  id           String @id @default(dbgenerated()) @map("_id") @db.ObjectId
  arn          String @unique
  userArn      String
  user         User   @relation(fields: [userArn], references: [arn])
  deals        Deal[]
  metrics      Metric[]

  token        String @unique
  name         String
  broker       String
  type         AccountType
  lastUpdated  DateTime?
}

enum DealEntry {
  DEAL_ENTRY_IN
  DEAL_ENTRY_OUT
  DEAL_ENTRY_INOUT
  DEAL_ENTRY_OUT_BY
}

enum DealReason {
  DEAL_REASON_CLIENT
  DEAL_REASON_MOBILE
  DEAL_REASON_WEB
  DEAL_REASON_EXPERT
  DEAL_REASON_SL
  DEAL_REASON_TP
  DEAL_REASON_SO
  DEAL_REASON_ROLLOVER
  DEAL_REASON_VMARGIN
  DEAL_REASON_SPLIT
}

enum DealType {
  DEAL_TYPE_BUY
  DEAL_TYPE_SELL
  DEAL_TYPE_BALANCE
  DEAL_TYPE_CREDIT
  DEAL_TYPE_CHARGE
  DEAL_TYPE_CORRECTION
  DEAL_TYPE_BONUS
  DEAL_TYPE_COMMISSION
  DEAL_TYPE_COMMISSION_DAILY
  DEAL_TYPE_COMMISSION_MONTHLY
  DEAL_TYPE_COMMISSION_AGENT_DAILY
  DEAL_TYPE_COMMISSION_AGENT_MONTHLY
  DEAL_TYPE_INTEREST
  DEAL_TYPE_BUY_CANCELED
  DEAL_TYPE_SELL_CANCELED
  DEAL_DIVIDEND
  DEAL_DIVIDEND_FRANKED
  DEAL_TAX
}

model Deal {
  id         String  @id @default(dbgenerated()) @map("_id") @db.ObjectId
  arn        String  @unique
  accountArn String
  account    Account @relation(fields: [accountArn], references: [arn])

  comment    String?
  commission Float?
  entry      DealEntry
  fee        Float?
  magic      Int?
  price      Float?
  profit     Float?
  reason     DealReason
  sl         Float?
  swap       Float?
  symbol     String?
  ticket     Int
  time       Int
  tp         Float?
  type       DealType
  volume     Float?

  @@unique([accountArn, ticket])
}

model Metric {
  id         String  @id @default(dbgenerated()) @map("_id") @db.ObjectId
  arn        String  @unique
  accountArn String
  account    Account @relation(fields: [accountArn], references: [arn])

  key        String
  value      Json
}
